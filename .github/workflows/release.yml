name: CI/CD Pipeline

permissions:
  contents: write

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint & Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Upgrade pip and install linters
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit

      - name: Run Flake8 Linting
        run: flake8 .

      - name: Run Bandit Security Scan
        run: bandit -r .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils ghostscript

      - name: Install Dependencies for Testing
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
          pip install pytest

      - name: Run Pytest
        run: pytest --maxfail=1 --disable-warnings -q

  build:
    name: Build Binary
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils ghostscript

      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
          pip install pyinstaller

      - name: Build Binary with PyInstaller
        run: pyinstaller --onefile --name ocrex ocrex/main.py

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ocrex-binary
          path: dist/ocrex

  release:
    name: Create Release and Upload Assets
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils ghostscript

      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
          pip install pyinstaller

      - name: Run Tests (Pre-Release)
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Build Binary with PyInstaller
        run: pyinstaller --onefile --name ocrex ocrex/main.py

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ocrex
          asset_name: ocrex
          asset_content_type: application/octet-stream
